apiVersion: v1
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: nexus3
    namespace: ak-nexus
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: sonatype/nexus3:latest
      generation: 1
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: docker-registry.default.svc:5000/ak-nexus/nexus3
    tags:
    - items:
      -
      tag: latest
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: nexus3
    name: nexus3
    namespace: ak-nexus
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: nexus3
      deploymentconfig: nexus3
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: nexus3
          deploymentconfig: nexus3
      spec:
        containers:
        - image: sonatype/nexus3
          name: nexus3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              port: 8081
            initialDelaySeconds: 180
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              port: 8081
            initialDelaySeconds: 20
            timeoutSeconds: 1
          ports:
          - containerPort: 8081
            protocol: TCP
          resources:
            limits:
              memory: 4Gi
            requests:
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /nexus-data
            name: pv-nexus
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pv-nexus
          persistentVolumeClaim:
            claimName: nexus-data
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - nexus3
        from:
          kind: ImageStreamTag
          name: nexus3:latest
          namespace: ak-nexus
      type: ImageChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: nexus-data
    namespace: ak-nexus
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 10Gi
  status:
    accessModes:
    - ReadWriteOnce
    - ReadWriteMany
    capacity:
      storage: 10Gi
    phase: Bound
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nexus3
    name: nexus3
    namespace: ak-nexus
  spec:
    ports:
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: nexus3
      deploymentconfig: nexus3
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: nexus3
    name: nexus3
    namespace: ak-nexus
  spec:
    host: nexus3-ak-nexus.apps.example.com
    port:
      targetPort: 8081-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: nexus3
      weight: 100
    wildcardPolicy: None
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
